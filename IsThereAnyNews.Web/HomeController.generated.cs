// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace IsThereAnyNews.Web.Controllers
{
    public partial class HomeController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected HomeController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult MarkClickedWithEvent()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MarkClickedWithEvent);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult MarkEntriesRead()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MarkEntriesRead);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult MarkEntriesSkipped()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MarkEntriesSkipped);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult MarkReadWithEvent()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MarkReadWithEvent);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ReadAjax()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReadAjax);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult User()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.User);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SubscribeToUser()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SubscribeToUser);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UnsubscribeFromUser()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UnsubscribeFromUser);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.HttpStatusCodeResult ChangeRegistration()
        {
            return new T4MVC_System_Web_Mvc_HttpStatusCodeResult(Area, Name, ActionNames.ChangeRegistration);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.HttpStatusCodeResult ChangeUsersLimit()
        {
            return new T4MVC_System_Web_Mvc_HttpStatusCodeResult(Area, Name, ActionNames.ChangeUsersLimit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ExternalLogin()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExternalLogin);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> ExternalLoginCallback()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExternalLoginCallback);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Login()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Login);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.HttpStatusCodeResult MarkAllReadForSubscription()
        {
            return new T4MVC_System_Web_Mvc_HttpStatusCodeResult(Area, Name, ActionNames.MarkAllReadForSubscription);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.HttpStatusCodeResult MarkRssEntryViewed()
        {
            return new T4MVC_System_Web_Mvc_HttpStatusCodeResult(Area, Name, ActionNames.MarkRssEntryViewed);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Public()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Public);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SubscribeToChannel()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SubscribeToChannel);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UnsubscribeFromChannel()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UnsubscribeFromChannel);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddComment()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddComment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddToReadLater()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddToReadLater);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult MarkNotRead()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MarkNotRead);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Share()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Share);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult VoteDown()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.VoteDown);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Voteup()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Voteup);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public HomeController Actions { get { return MVC.Home; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Home";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Home";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string MarkClickedWithEvent = "MarkClickedWithEvent";
            public readonly string MarkEntriesRead = "MarkEntriesRead";
            public readonly string MarkEntriesSkipped = "MarkEntriesSkipped";
            public readonly string MarkReadWithEvent = "MarkReadWithEvent";
            public readonly string ReadAjax = "ReadAjax";
            public readonly string Logout = "Logout";
            public readonly string ImportOpml = "ImportOpml";
            public readonly string Users = "Users";
            public readonly string User = "User";
            public readonly string SubscribeToUser = "SubscribeToUser";
            public readonly string UnsubscribeFromUser = "UnsubscribeFromUser";
            public readonly string ChangeRegistration = "ChangeRegistration";
            public readonly string ChangeUsersLimit = "ChangeUsersLimit";
            public readonly string ConfigurationStatus = "ConfigurationStatus";
            public readonly string Admin = "Admin";
            public readonly string SpinUpdateJob = "SpinUpdateJob";
            public readonly string ExternalLogin = "ExternalLogin";
            public readonly string ExternalLoginCallback = "ExternalLoginCallback";
            public readonly string ExternalLoginFailure = "ExternalLoginFailure";
            public readonly string Login = "Login";
            public readonly string LogOff = "LogOff";
            public readonly string RegistrationClosed = "RegistrationClosed";
            public readonly string AddChannel = "AddChannel";
            public readonly string RssChannel = "RssChannel";
            public readonly string MarkAllReadForSubscription = "MarkAllReadForSubscription";
            public readonly string MarkRssEntryViewed = "MarkRssEntryViewed";
            public readonly string My = "My";
            public readonly string MyChannelList = "MyChannelList";
            public readonly string Public = "Public";
            public readonly string PublicChannels = "PublicChannels";
            public readonly string SubscribeToChannel = "SubscribeToChannel";
            public readonly string UnsubscribeFromChannel = "UnsubscribeFromChannel";
            public readonly string AddComment = "AddComment";
            public readonly string AddToReadLater = "AddToReadLater";
            public readonly string MarkNotRead = "MarkNotRead";
            public readonly string Share = "Share";
            public readonly string VoteDown = "VoteDown";
            public readonly string Voteup = "Voteup";
            public readonly string ChangeDisplayName = "ChangeDisplayName";
            public readonly string ChangeEmail = "ChangeEmail";
            public readonly string Account = "Account";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string MarkClickedWithEvent = "MarkClickedWithEvent";
            public const string MarkEntriesRead = "MarkEntriesRead";
            public const string MarkEntriesSkipped = "MarkEntriesSkipped";
            public const string MarkReadWithEvent = "MarkReadWithEvent";
            public const string ReadAjax = "ReadAjax";
            public const string Logout = "Logout";
            public const string ImportOpml = "ImportOpml";
            public const string Users = "Users";
            public const string User = "User";
            public const string SubscribeToUser = "SubscribeToUser";
            public const string UnsubscribeFromUser = "UnsubscribeFromUser";
            public const string ChangeRegistration = "ChangeRegistration";
            public const string ChangeUsersLimit = "ChangeUsersLimit";
            public const string ConfigurationStatus = "ConfigurationStatus";
            public const string Admin = "Admin";
            public const string SpinUpdateJob = "SpinUpdateJob";
            public const string ExternalLogin = "ExternalLogin";
            public const string ExternalLoginCallback = "ExternalLoginCallback";
            public const string ExternalLoginFailure = "ExternalLoginFailure";
            public const string Login = "Login";
            public const string LogOff = "LogOff";
            public const string RegistrationClosed = "RegistrationClosed";
            public const string AddChannel = "AddChannel";
            public const string RssChannel = "RssChannel";
            public const string MarkAllReadForSubscription = "MarkAllReadForSubscription";
            public const string MarkRssEntryViewed = "MarkRssEntryViewed";
            public const string My = "My";
            public const string MyChannelList = "MyChannelList";
            public const string Public = "Public";
            public const string PublicChannels = "PublicChannels";
            public const string SubscribeToChannel = "SubscribeToChannel";
            public const string UnsubscribeFromChannel = "UnsubscribeFromChannel";
            public const string AddComment = "AddComment";
            public const string AddToReadLater = "AddToReadLater";
            public const string MarkNotRead = "MarkNotRead";
            public const string Share = "Share";
            public const string VoteDown = "VoteDown";
            public const string Voteup = "Voteup";
            public const string ChangeDisplayName = "ChangeDisplayName";
            public const string ChangeEmail = "ChangeEmail";
            public const string Account = "Account";
        }


        static readonly ActionParamsClass_MarkClickedWithEvent s_params_MarkClickedWithEvent = new ActionParamsClass_MarkClickedWithEvent();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_MarkClickedWithEvent MarkClickedWithEventParams { get { return s_params_MarkClickedWithEvent; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_MarkClickedWithEvent
        {
            public readonly string dto = "dto";
        }
        static readonly ActionParamsClass_MarkEntriesRead s_params_MarkEntriesRead = new ActionParamsClass_MarkEntriesRead();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_MarkEntriesRead MarkEntriesReadParams { get { return s_params_MarkEntriesRead; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_MarkEntriesRead
        {
            public readonly string dto = "dto";
        }
        static readonly ActionParamsClass_MarkEntriesSkipped s_params_MarkEntriesSkipped = new ActionParamsClass_MarkEntriesSkipped();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_MarkEntriesSkipped MarkEntriesSkippedParams { get { return s_params_MarkEntriesSkipped; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_MarkEntriesSkipped
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_MarkReadWithEvent s_params_MarkReadWithEvent = new ActionParamsClass_MarkReadWithEvent();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_MarkReadWithEvent MarkReadWithEventParams { get { return s_params_MarkReadWithEvent; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_MarkReadWithEvent
        {
            public readonly string dto = "dto";
        }
        static readonly ActionParamsClass_ReadAjax s_params_ReadAjax = new ActionParamsClass_ReadAjax();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ReadAjax ReadAjaxParams { get { return s_params_ReadAjax; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ReadAjax
        {
            public readonly string streamType = "streamType";
            public readonly string id = "id";
            public readonly string showReadEntries = "showReadEntries";
        }
        static readonly ActionParamsClass_ImportOpml s_params_ImportOpml = new ActionParamsClass_ImportOpml();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ImportOpml ImportOpmlParams { get { return s_params_ImportOpml; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ImportOpml
        {
            public readonly string dto = "dto";
        }
        static readonly ActionParamsClass_User s_params_User = new ActionParamsClass_User();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_User UserParams { get { return s_params_User; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_User
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_SubscribeToUser s_params_SubscribeToUser = new ActionParamsClass_SubscribeToUser();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SubscribeToUser SubscribeToUserParams { get { return s_params_SubscribeToUser; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SubscribeToUser
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_UnsubscribeFromUser s_params_UnsubscribeFromUser = new ActionParamsClass_UnsubscribeFromUser();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UnsubscribeFromUser UnsubscribeFromUserParams { get { return s_params_UnsubscribeFromUser; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UnsubscribeFromUser
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_ChangeRegistration s_params_ChangeRegistration = new ActionParamsClass_ChangeRegistration();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ChangeRegistration ChangeRegistrationParams { get { return s_params_ChangeRegistration; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ChangeRegistration
        {
            public readonly string dto = "dto";
        }
        static readonly ActionParamsClass_ChangeUsersLimit s_params_ChangeUsersLimit = new ActionParamsClass_ChangeUsersLimit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ChangeUsersLimit ChangeUsersLimitParams { get { return s_params_ChangeUsersLimit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ChangeUsersLimit
        {
            public readonly string dto = "dto";
        }
        static readonly ActionParamsClass_ExternalLogin s_params_ExternalLogin = new ActionParamsClass_ExternalLogin();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ExternalLogin ExternalLoginParams { get { return s_params_ExternalLogin; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ExternalLogin
        {
            public readonly string provider = "provider";
            public readonly string returnUrl = "returnUrl";
        }
        static readonly ActionParamsClass_ExternalLoginCallback s_params_ExternalLoginCallback = new ActionParamsClass_ExternalLoginCallback();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ExternalLoginCallback ExternalLoginCallbackParams { get { return s_params_ExternalLoginCallback; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ExternalLoginCallback
        {
            public readonly string returnUrl = "returnUrl";
        }
        static readonly ActionParamsClass_Login s_params_Login = new ActionParamsClass_Login();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Login LoginParams { get { return s_params_Login; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Login
        {
            public readonly string returnUrl = "returnUrl";
        }
        static readonly ActionParamsClass_AddChannel s_params_AddChannel = new ActionParamsClass_AddChannel();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddChannel AddChannelParams { get { return s_params_AddChannel; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddChannel
        {
            public readonly string dto = "dto";
        }
        static readonly ActionParamsClass_MarkAllReadForSubscription s_params_MarkAllReadForSubscription = new ActionParamsClass_MarkAllReadForSubscription();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_MarkAllReadForSubscription MarkAllReadForSubscriptionParams { get { return s_params_MarkAllReadForSubscription; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_MarkAllReadForSubscription
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_MarkRssEntryViewed s_params_MarkRssEntryViewed = new ActionParamsClass_MarkRssEntryViewed();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_MarkRssEntryViewed MarkRssEntryViewedParams { get { return s_params_MarkRssEntryViewed; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_MarkRssEntryViewed
        {
            public readonly string channelId = "channelId";
        }
        static readonly ActionParamsClass_Public s_params_Public = new ActionParamsClass_Public();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Public PublicParams { get { return s_params_Public; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Public
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_SubscribeToChannel s_params_SubscribeToChannel = new ActionParamsClass_SubscribeToChannel();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SubscribeToChannel SubscribeToChannelParams { get { return s_params_SubscribeToChannel; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SubscribeToChannel
        {
            public readonly string channelId = "channelId";
        }
        static readonly ActionParamsClass_UnsubscribeFromChannel s_params_UnsubscribeFromChannel = new ActionParamsClass_UnsubscribeFromChannel();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UnsubscribeFromChannel UnsubscribeFromChannelParams { get { return s_params_UnsubscribeFromChannel; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UnsubscribeFromChannel
        {
            public readonly string channelId = "channelId";
        }
        static readonly ActionParamsClass_AddComment s_params_AddComment = new ActionParamsClass_AddComment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddComment AddCommentParams { get { return s_params_AddComment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddComment
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_AddToReadLater s_params_AddToReadLater = new ActionParamsClass_AddToReadLater();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddToReadLater AddToReadLaterParams { get { return s_params_AddToReadLater; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddToReadLater
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_MarkNotRead s_params_MarkNotRead = new ActionParamsClass_MarkNotRead();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_MarkNotRead MarkNotReadParams { get { return s_params_MarkNotRead; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_MarkNotRead
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_Share s_params_Share = new ActionParamsClass_Share();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Share ShareParams { get { return s_params_Share; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Share
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_VoteDown s_params_VoteDown = new ActionParamsClass_VoteDown();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_VoteDown VoteDownParams { get { return s_params_VoteDown; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_VoteDown
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_Voteup s_params_Voteup = new ActionParamsClass_Voteup();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Voteup VoteupParams { get { return s_params_Voteup; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Voteup
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_ChangeDisplayName s_params_ChangeDisplayName = new ActionParamsClass_ChangeDisplayName();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ChangeDisplayName ChangeDisplayNameParams { get { return s_params_ChangeDisplayName; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ChangeDisplayName
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_ChangeEmail s_params_ChangeEmail = new ActionParamsClass_ChangeEmail();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ChangeEmail ChangeEmailParams { get { return s_params_ChangeEmail; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ChangeEmail
        {
            public readonly string model = "model";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _ContactAdministration = "_ContactAdministration";
                public readonly string Account = "Account";
                public readonly string AddChannel = "AddChannel";
                public readonly string Admin = "Admin";
                public readonly string ChangeDisplayName = "ChangeDisplayName";
                public readonly string ChangeEmail = "ChangeEmail";
                public readonly string ImportOpml = "ImportOpml";
                public readonly string Index = "Index";
                public readonly string Login = "Login";
                public readonly string My = "My";
                public readonly string RegistrationClosed = "RegistrationClosed";
                public readonly string RssChannel = "RssChannel";
                public readonly string User = "User";
                public readonly string Users = "Users";
            }
            public readonly string _ContactAdministration = "~/Views/Home/_ContactAdministration.cshtml";
            public readonly string Account = "~/Views/Home/Account.cshtml";
            public readonly string AddChannel = "~/Views/Home/AddChannel.cshtml";
            public readonly string Admin = "~/Views/Home/Admin.cshtml";
            public readonly string ChangeDisplayName = "~/Views/Home/ChangeDisplayName.cshtml";
            public readonly string ChangeEmail = "~/Views/Home/ChangeEmail.cshtml";
            public readonly string ImportOpml = "~/Views/Home/ImportOpml.cshtml";
            public readonly string Index = "~/Views/Home/Index.cshtml";
            public readonly string Login = "~/Views/Home/Login.cshtml";
            public readonly string My = "~/Views/Home/My.cshtml";
            public readonly string RegistrationClosed = "~/Views/Home/RegistrationClosed.cshtml";
            public readonly string RssChannel = "~/Views/Home/RssChannel.cshtml";
            public readonly string User = "~/Views/Home/User.cshtml";
            public readonly string Users = "~/Views/Home/Users.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_HomeController : IsThereAnyNews.Web.Controllers.HomeController
    {
        public T4MVC_HomeController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void MarkClickedWithEventOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, IsThereAnyNews.Dtos.MarkClickedDto dto);

        [NonAction]
        public override System.Web.Mvc.ActionResult MarkClickedWithEvent(IsThereAnyNews.Dtos.MarkClickedDto dto)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MarkClickedWithEvent);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dto", dto);
            MarkClickedWithEventOverride(callInfo, dto);
            return callInfo;
        }

        [NonAction]
        partial void MarkEntriesReadOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, IsThereAnyNews.Dtos.MarkReadDto dto);

        [NonAction]
        public override System.Web.Mvc.ActionResult MarkEntriesRead(IsThereAnyNews.Dtos.MarkReadDto dto)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MarkEntriesRead);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dto", dto);
            MarkEntriesReadOverride(callInfo, dto);
            return callInfo;
        }

        [NonAction]
        partial void MarkEntriesSkippedOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, IsThereAnyNews.Dtos.MarkSkippedDto model);

        [NonAction]
        public override System.Web.Mvc.ActionResult MarkEntriesSkipped(IsThereAnyNews.Dtos.MarkSkippedDto model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MarkEntriesSkipped);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            MarkEntriesSkippedOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void MarkReadWithEventOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, IsThereAnyNews.Dtos.MarkReadDto dto);

        [NonAction]
        public override System.Web.Mvc.ActionResult MarkReadWithEvent(IsThereAnyNews.Dtos.MarkReadDto dto)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MarkReadWithEvent);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dto", dto);
            MarkReadWithEventOverride(callInfo, dto);
            return callInfo;
        }

        [NonAction]
        partial void ReadAjaxOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, IsThereAnyNews.SharedData.StreamType streamType, long id, IsThereAnyNews.SharedData.ShowReadEntries showReadEntries);

        [NonAction]
        public override System.Web.Mvc.ActionResult ReadAjax(IsThereAnyNews.SharedData.StreamType streamType, long id, IsThereAnyNews.SharedData.ShowReadEntries showReadEntries)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReadAjax);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "streamType", streamType);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "showReadEntries", showReadEntries);
            ReadAjaxOverride(callInfo, streamType, id, showReadEntries);
            return callInfo;
        }

        [NonAction]
        partial void LogoutOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Logout()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Logout);
            LogoutOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ImportOpmlOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ImportOpml()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ImportOpml);
            ImportOpmlOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ImportOpmlOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, IsThereAnyNews.Dtos.OpmlImporterIndexDto dto);

        [NonAction]
        public override System.Web.Mvc.ActionResult ImportOpml(IsThereAnyNews.Dtos.OpmlImporterIndexDto dto)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ImportOpml);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dto", dto);
            ImportOpmlOverride(callInfo, dto);
            return callInfo;
        }

        [NonAction]
        partial void UsersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Users()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Users);
            UsersOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void UserOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long id);

        [NonAction]
        public override System.Web.Mvc.ActionResult User(long id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.User);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            UserOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void SubscribeToUserOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, IsThereAnyNews.Dtos.SubscribeToUserActivityDto model);

        [NonAction]
        public override System.Web.Mvc.ActionResult SubscribeToUser(IsThereAnyNews.Dtos.SubscribeToUserActivityDto model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SubscribeToUser);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            SubscribeToUserOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void UnsubscribeFromUserOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, IsThereAnyNews.Dtos.SubscribeToUserActivityDto model);

        [NonAction]
        public override System.Web.Mvc.ActionResult UnsubscribeFromUser(IsThereAnyNews.Dtos.SubscribeToUserActivityDto model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UnsubscribeFromUser);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            UnsubscribeFromUserOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void ChangeRegistrationOverride(T4MVC_System_Web_Mvc_HttpStatusCodeResult callInfo, IsThereAnyNews.Dtos.ChangeRegistrationDto dto);

        [NonAction]
        public override System.Web.Mvc.HttpStatusCodeResult ChangeRegistration(IsThereAnyNews.Dtos.ChangeRegistrationDto dto)
        {
            var callInfo = new T4MVC_System_Web_Mvc_HttpStatusCodeResult(Area, Name, ActionNames.ChangeRegistration);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dto", dto);
            ChangeRegistrationOverride(callInfo, dto);
            return callInfo;
        }

        [NonAction]
        partial void ChangeUsersLimitOverride(T4MVC_System_Web_Mvc_HttpStatusCodeResult callInfo, IsThereAnyNews.Dtos.ChangeUsersLimitDto dto);

        [NonAction]
        public override System.Web.Mvc.HttpStatusCodeResult ChangeUsersLimit(IsThereAnyNews.Dtos.ChangeUsersLimitDto dto)
        {
            var callInfo = new T4MVC_System_Web_Mvc_HttpStatusCodeResult(Area, Name, ActionNames.ChangeUsersLimit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dto", dto);
            ChangeUsersLimitOverride(callInfo, dto);
            return callInfo;
        }

        [NonAction]
        partial void ConfigurationStatusOverride(T4MVC_System_Web_Mvc_JsonResult callInfo);

        [NonAction]
        public override System.Web.Mvc.JsonResult ConfigurationStatus()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ConfigurationStatus);
            ConfigurationStatusOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void AdminOverride(T4MVC_System_Web_Mvc_ViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ViewResult Admin()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.Admin);
            AdminOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SpinUpdateJobOverride(T4MVC_System_Web_Mvc_HttpStatusCodeResult callInfo);

        [NonAction]
        public override System.Web.Mvc.HttpStatusCodeResult SpinUpdateJob()
        {
            var callInfo = new T4MVC_System_Web_Mvc_HttpStatusCodeResult(Area, Name, ActionNames.SpinUpdateJob);
            SpinUpdateJobOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ExternalLoginOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string provider, string returnUrl);

        [NonAction]
        public override System.Web.Mvc.ActionResult ExternalLogin(string provider, string returnUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExternalLogin);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "provider", provider);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            ExternalLoginOverride(callInfo, provider, returnUrl);
            return callInfo;
        }

        [NonAction]
        partial void ExternalLoginCallbackOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string returnUrl);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> ExternalLoginCallback(string returnUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExternalLoginCallback);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            ExternalLoginCallbackOverride(callInfo, returnUrl);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }

        [NonAction]
        partial void ExternalLoginFailureOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ExternalLoginFailure()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExternalLoginFailure);
            ExternalLoginFailureOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void LoginOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string returnUrl);

        [NonAction]
        public override System.Web.Mvc.ActionResult Login(string returnUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Login);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            LoginOverride(callInfo, returnUrl);
            return callInfo;
        }

        [NonAction]
        partial void LogOffOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult LogOff()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LogOff);
            LogOffOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void RegistrationClosedOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult RegistrationClosed()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RegistrationClosed);
            RegistrationClosedOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void AddChannelOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddChannel()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddChannel);
            AddChannelOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void AddChannelOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, IsThereAnyNews.Dtos.AddChannelDto dto);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddChannel(IsThereAnyNews.Dtos.AddChannelDto dto)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddChannel);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dto", dto);
            AddChannelOverride(callInfo, dto);
            return callInfo;
        }

        [NonAction]
        partial void RssChannelOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult RssChannel()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RssChannel);
            RssChannelOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void MarkAllReadForSubscriptionOverride(T4MVC_System_Web_Mvc_HttpStatusCodeResult callInfo, IsThereAnyNews.Dtos.MarkReadForSubscriptionDto model);

        [NonAction]
        public override System.Web.Mvc.HttpStatusCodeResult MarkAllReadForSubscription(IsThereAnyNews.Dtos.MarkReadForSubscriptionDto model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_HttpStatusCodeResult(Area, Name, ActionNames.MarkAllReadForSubscription);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            MarkAllReadForSubscriptionOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void MarkRssEntryViewedOverride(T4MVC_System_Web_Mvc_HttpStatusCodeResult callInfo, long channelId);

        [NonAction]
        public override System.Web.Mvc.HttpStatusCodeResult MarkRssEntryViewed(long channelId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_HttpStatusCodeResult(Area, Name, ActionNames.MarkRssEntryViewed);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "channelId", channelId);
            MarkRssEntryViewedOverride(callInfo, channelId);
            return callInfo;
        }

        [NonAction]
        partial void MyOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult My()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.My);
            MyOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void MyChannelListOverride(T4MVC_System_Web_Mvc_JsonResult callInfo);

        [NonAction]
        public override System.Web.Mvc.JsonResult MyChannelList()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.MyChannelList);
            MyChannelListOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void PublicOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long id);

        [NonAction]
        public override System.Web.Mvc.ActionResult Public(long id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Public);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            PublicOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void PublicChannelsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult PublicChannels()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PublicChannels);
            PublicChannelsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SubscribeToChannelOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long channelId);

        [NonAction]
        public override System.Web.Mvc.ActionResult SubscribeToChannel(long channelId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SubscribeToChannel);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "channelId", channelId);
            SubscribeToChannelOverride(callInfo, channelId);
            return callInfo;
        }

        [NonAction]
        partial void UnsubscribeFromChannelOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long channelId);

        [NonAction]
        public override System.Web.Mvc.ActionResult UnsubscribeFromChannel(long channelId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UnsubscribeFromChannel);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "channelId", channelId);
            UnsubscribeFromChannelOverride(callInfo, channelId);
            return callInfo;
        }

        [NonAction]
        partial void AddCommentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, IsThereAnyNews.Dtos.RssActionModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddComment(IsThereAnyNews.Dtos.RssActionModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddComment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            AddCommentOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void AddToReadLaterOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, IsThereAnyNews.Dtos.RssActionModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddToReadLater(IsThereAnyNews.Dtos.RssActionModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddToReadLater);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            AddToReadLaterOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void MarkNotReadOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, IsThereAnyNews.Dtos.RssActionModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult MarkNotRead(IsThereAnyNews.Dtos.RssActionModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MarkNotRead);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            MarkNotReadOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void ShareOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, IsThereAnyNews.Dtos.RssActionModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult Share(IsThereAnyNews.Dtos.RssActionModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Share);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ShareOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void VoteDownOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, IsThereAnyNews.Dtos.RssActionModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult VoteDown(IsThereAnyNews.Dtos.RssActionModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.VoteDown);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            VoteDownOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void VoteupOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, IsThereAnyNews.Dtos.RssActionModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult Voteup(IsThereAnyNews.Dtos.RssActionModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Voteup);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            VoteupOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void ChangeDisplayNameOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ChangeDisplayName()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangeDisplayName);
            ChangeDisplayNameOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ChangeDisplayNameOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, IsThereAnyNews.Dtos.ChangeDisplayNameModelDto model);

        [NonAction]
        public override System.Web.Mvc.ActionResult ChangeDisplayName(IsThereAnyNews.Dtos.ChangeDisplayNameModelDto model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangeDisplayName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ChangeDisplayNameOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void ChangeEmailOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ChangeEmail()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangeEmail);
            ChangeEmailOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ChangeEmailOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, IsThereAnyNews.Dtos.ChangeEmailModelDto model);

        [NonAction]
        public override System.Web.Mvc.ActionResult ChangeEmail(IsThereAnyNews.Dtos.ChangeEmailModelDto model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangeEmail);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ChangeEmailOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void AccountOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Account()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Account);
            AccountOverride(callInfo);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
